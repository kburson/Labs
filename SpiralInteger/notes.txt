
------------
-Exercise 3-
------------
Write some code that accepts an integer and prints the integers from 0
to that input integer in a spiral format.
For example, if I supplied 24 the output would be:
20 21 21 23 24
19  6  7  8  9
18  5  0  1 10
17  4  3  2 11
16 15 14 13 12

==========================================
  |  0  1  2  3  4  5  6	values {0-1}	center = [x,y] = 0,0  : colCount = 2, rowCount = 1
--+----------------------
0 |  0  1

  |  0  1  2  3  4  5  6	values {2-3}	center = [x,y] = 0,0  : colCount = 2, rowCount = 2
--+----------------------
0 |  0  1
1 |  3  2

  |  0  1  2  3  4  5  6	value {4-5}		center = [x,y] = 1,0  : colCount = 3, rowCount = 2
--+----------------------
0 |  5  0  1
1 |  4  3  2

  |  0  1  2  3  4  5  6	values {6-8}	center = [x,y] = 1,1  : colCount = 3, rowCount = 3
--+----------------------
0 |  6  7  8
1 |  5  0  1
2 |  4  3  2

  |  0  1  2  3  4  5  6	values {9-12}	center = [x,y] = 1,1  : colCount = 4, rowCount = 3
--+----------------------
0 |  6  7  8  9
1 |  5  0  1 10
2 |  4  3  2 11

  |  0  1  2  3  4  5  6	values {12-15}	center = [x,y] = 1,1  : colCount = 4, rowCount = 4
--+----------------------
0 |  6  7  8  9
1 |  5  0  1 10
2 |  4  3  2 11
3 | 15 14 13 12 

  |  0  1  2  3  4  5  6	values {16-19}	center = [x,y] = 2,1  : colCount = 5, rowCount = 4
--+----------------------
0 | 19  6  7  8  9
1 | 18  5  0  1 10
2 | 17  4  3  2 11
3 | 16 15 14 13 12

  |  0  1  2  3  4  5  6	values {20-24}	center = [x,y] = 2,2  : colCount = 5, rowCount = 5
--+----------------------
0 | 20 21 22 23 24
1 | 19  6  7  8  9
2 | 18  5  0  1 10
3 | 17  4  3  2 11
4 | 16 15 14 13 12
5 |

  |  0  1  2  3  4  5  6	values {25-29}	center = [x,y] = 3,2  : colCount = 6, rowCount = 5
--+----------------------
0 | 20 21 22 23 24 25
1 | 19  6  7  8  9 26
2 | 18  5  0  1 10 27
3 | 17  4  3  2 11 28
4 | 16 15 14 13 12 29
5 |

  |  0  1  2  3  4  5  6	values {25-29}	center = [x,y] = 3,2  : colCount = 6, rowCount = 5
--+----------------------
0 | 41 20 21 22 23 24 25
1 | 40 19  6  7  8  9 26
2 | 39 18  5  0  1 10 27
3 | 38 17  4  3  2 11 28
4 | 37 16 15 14 13 12 29
5 | 36 35 34 33 32 31 30

Col    9  7  5  3  1  2  4  6  8 10            9  7  5  3  1  2  4  6  8 10
Row +------------------------------         +--------------------------------
  9 | 72 73 74 75 76 77 78 79 80 81       9 | 72------------------------>81
  7 | 71 42 43 44 45 46 47 48 49 82       7 |  | 42------------------>49  ^
  5 | 70 41 20 21 22 23 24 25 50 83       5 |  |  | 20------------>25  ^  |
  3 | 69 40 19  6  7  8  9 26 51 84       3 |  |  |  |  6------->9  ^  |  |
  1 | 68 39 18  5  0  1 10 27 52 85       1 |  |  |  |  v  0->1  ^  |  |  |
  2 | 67 38 17  4  3  2 11 28 53 86       2 |  |  |  v  4<----2  |  |  |  |
  4 | 66 37 16 15 14 13 12 29 54 87       4 |  |  v 16<---------12  |  |  |
  6 | 65 36 35 34 33 32 31 30 55 88       6 |  v 36<---------------30  |  |
  8 | 64 63 62 61 60 59 58 57 56 89       8 | 64<---------------------56  |
 10 | 99 98 97 96 95 94 93 92 91 90      10 |<---------------------------90

Upper Left: corner(i-1) + 6 + 8(i-1)) ::		Lower Right : corner(i-1) + 2 + 8(i-1)
	corner 0 =  0; [center] 						corner(0): 0 
	corner 1 =  0 + 6 + 8(1-0) == 6; 				corner(1): 0 + 2 + 8(1-1) =  0 + 2 + 0 ==  2
	corner 2 =  6 + 6 + 8(2-1) == 20;				corner(2): 0 + 2 + 8(2-1) =  2 + 2 + 8 == 12
	corner 3 = 20 + 6 + 8(3-1) == 42; 				corner(3): 0 + 2 + 8(3-1) = 12 + 2 +16 == 30
	corner 4 = 42 + 6 + 8(4-1) == 72; 				corner(3): 0 + 2 + 8(4-1) = 30 + 2 +24 == 56

     Col
Pos   1  2  3  4  5  6  7  8  9 10 11
Row +--------------------------------- 
  1 | 0  1                           
  2 |    2  4                          
  3 |       6  9                           
  4 |         12 16                      
  5 |            20 25                  
  6 |               30 36                
  7 |                  42 49              
  8 |                     56 64           
  9 |                        72 81      
 10 |                           90 100  
 
Index: 1   2   3   4   5   6   7   8   9  10  11 == 1  2  3   4   5   6   7   8   9  10   11 
Cols: +0, +1, +3, +5, +7, +9,+11,+13,+15,+17,+19 == 0  1  4   9  16  25  36  49  64  81  100
Rows: +0, +2, +4, +6, +8,+10,+12,+14,+16,+18,+20 == 0  2  6  12  20  30  42  56  72  90  110  

Evens:  2(n-1)
Odds:   2(n)-1
rows = count(sum(i/2+1)) <= n

sum of Odd integers: N^2 :: col = N+1 :: (max(col)-1)^2 <= value
sum of Even integers: N(N+1) <= I


